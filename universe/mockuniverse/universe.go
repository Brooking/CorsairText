// Code generated by MockGen. DO NOT EDIT.
// Source: universe.go

// Package mockuniverse is a generated GoMock package.
package mockuniverse

import (
	spot "corsairtext/universe/spot"
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockUniverse is a mock of Universe interface
type MockUniverse struct {
	ctrl     *gomock.Controller
	recorder *MockUniverseMockRecorder
}

// MockUniverseMockRecorder is the mock recorder for MockUniverse
type MockUniverseMockRecorder struct {
	mock *MockUniverse
}

// NewMockUniverse creates a new mock instance
func NewMockUniverse(ctrl *gomock.Controller) *MockUniverse {
	mock := &MockUniverse{ctrl: ctrl}
	mock.recorder = &MockUniverseMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockUniverse) EXPECT() *MockUniverseMockRecorder {
	return m.recorder
}

// WhereAmI mocks base method
func (m *MockUniverse) WhereAmI() spot.Spot {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "WhereAmI")
	ret0, _ := ret[0].(spot.Spot)
	return ret0
}

// WhereAmI indicates an expected call of WhereAmI
func (mr *MockUniverseMockRecorder) WhereAmI() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "WhereAmI", reflect.TypeOf((*MockUniverse)(nil).WhereAmI))
}
